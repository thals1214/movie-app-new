{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kQA6BeA,MA1Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAkBL,UAAU,gBAA5B,SAA6CI,GAAlCC,QAGnB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,gB,iBCqCDC,G,wNA7CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yEALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,uDASZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA2BM,KAAKT,MAA1BC,EAAN,EAAMA,UAAWC,EAAjB,EAAiBA,OACjB,OACE,yBAASV,UAAY,YAArB,SACGS,EAEC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAY,eAAlB,0BAIF,qBAAKA,UAAY,SAAjB,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEEvB,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAMC,mBAChBpB,OAAUmB,EAAMnB,QALTmB,EAAME,e,GA/BXC,IAAMC,YCFxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.42e19c73.chunk.js","sourcesContent":["import React,{ Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}></img>\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key = {index} className=\"genres__genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React, {Component} from \"react\";\nimport Movie from \"./Movie\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"./Movie.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () =>{\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false});\n\n  }\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const{isLoading, movies} = this.state;\n    return(\n      <section className = \"container\">\n        {isLoading\n        ? (\n          <div className=\"loader\">\n            <span className = \"loader__text\">Loading...</span>\n          </div>\n        )\n        : (\n          <div className = \"movies\">\n            {movies.map(movie => (\n              <Movie\n                key = {movie.id}\n                year = {movie.year}\n                title = {movie.title}\n                summary = {movie.summary}\n                poster = {movie.medium_cover_image}\n                genres = {movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}